#!/bin/bash
#
# Base code from and credit goes to:
#   https://github.com/Anachron/i3blocks/blob/master/blocks/display
#
# displays
#   For use within a status bar (like i3blocks) to auto setup displays when
#   they change/are added. Workspaces can also be moved

xrandrOut=$(xrandr)

# The following code is good but assumes you only have one of each type of
# output. I, for instance, have 2 of each.

# hdmiName=$(echo "${xrandrOut}" | grep -i 'HDMI' | awk '{print $1}')
# vgaName=$(echo "${xrandrOut}" | grep -i 'VGA' | awk '{print $1}')
# edpName=$(echo "${xrandrOut}" | grep -i 'EDP' | awk '{print $1}')
# dpName=$(echo "${xrandrOut}" | grep -i ' DP' | awk '{print $1}')

hdmiName="HDMI2"
edpName="eDP1"
dpName="DP2-2"

# Fetch active displays, store, and compare against the previous check to see
# what changed
activeDisplays=$(echo "${xrandrOut}" | grep " connected" | sed -e "s/\([A-Z0-9]\+\) connected.*/\1/" | tr -s '\n' ' ')
allDisplays=($(echo "${xrandrOut}" | grep ".connected" | sed -e "s/\([A-Z0-9]\+\) .*/\1/" | tr -s '\n'))
displayFile='/tmp/.displays'

if [[ -f "${displayFile}" ]]; then
    oldDisplays=$(cat "${displayFile}")
else
    oldDisplays=""
fi

if [[ "${oldDisplays}" != "${activeDisplays}" ]]; then
    change="yes"
else
    change="no"
fi

log() {
  echo ${@} 1>&2
}

move_workspaces() {
  # Move workspaces to display
  #
  # Args:
  #   display: Name of display
  #   workspaces: Expanded array of workspace names
  display=${1}
  shift
  workspaces=("$@")
  for ws in "${workspaces}"; do
    log "Moving workspace ${ws} to output ${display}"
    i3-msg workspace ${ws}
    i3-msg move workspace to output ${display}
  done
}

deactivate_other_displays() {
  # Deactivate displays other than the provided ones
  # Args:
  #   desired: Expanded [@] array of display names
  desired="${@} "
  for output in $allDisplays; do
    if [[ ! $desired =~ "${output} " ]]; then
      xrandr --output ${output} --off
    fi
  done
}
function join { local IFS="$1"; shift; echo "$*"; }

# External, when docked (DP2-2)
if [[ "$activeDisplays" =~ "${dpName}" ]]; then
  # Position of display and workspaces to move to it
  pos="right-of ${edpName}"
  workspaces=(
  "6: "
  "2: "
  )
  desired=($edpName $dpName)
  if [[ "${change}" = "yes" ]]; then
    $(xrandr --output "${edpName}" --auto)
    $(xrandr --output "${dpName}" --${pos} --auto --primary)
    move_workspaces ${dpName} "${workspaces[@]}"
    deactivate_other_displays ${desired[@]}
  fi
  (join '+' $desired)
  (join '+' $desired)
  echo ""

# External, HDMI port
elif [[ "$activeDisplays" =~ "${hdmiName}" ]]; then
  pos="right-of ${edpName}"
  workspaces=(
  "6: "
  "2: "
  )
  desired=($edpName $hdmiName)
  if [[ "${change}" = "yes" ]]; then
    $(xrandr --output "${edpName}" --auto)
    $(xrandr --output "${hdmiName}" --${pos} --auto --primary)
    move_workspaces ${hdmiName} "${workspaces[@]}"
    deactivate_other_displays ${desired[@]}
  fi
  (join '+' "${desired[@]}")
  (join '+' "${desired[@]}")
  echo ""

elif [[ "$activeDisplays" =~ "${edpName}" ]]; then
  if [[ "${change}" = "yes" ]]; then
    deactivate_other_displays ${edpName}
    $(xrandr --output "${edpName}" --primary --auto)
  fi
  echo "eDP1"
  echo "eDP1"
  echo ""
fi

if [[ "${change}" = "yes" ]]; then
  echo "${activeDisplays}" > "${displayFile}"
fi
